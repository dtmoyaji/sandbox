<div class="panel-container">
    <h2>テーブル一覧</h2>
    <div class="table-list">
        <table class="data-table">
            <thead>
                <tr>
                    <th>テーブル名</th>
                    <th>説明</th>
                </tr>
            </thead>
            <tbody id="tableListBody">
                <!-- この部分はサーバーサイドでテーブル一覧データを取得して表示する -->
                <tr>
                    <td colspan="2" class="loading-message">テーブル一覧を読み込み中...</td>
                </tr>
            </tbody>
        </table>
    </div>
    <!-- ページングコントロールを追加 -->
    <div class="pagination-controls">
        <button id="prevPageBtn" disabled>&lt; 前へ</button>
        <span id="pageInfo">ページ <span id="currentPage">1</span> / <span id="totalPages">1</span></span>
        <button id="nextPageBtn" disabled>次へ &gt;</button>
    </div>
</div>

<script>
    // テーブル一覧を取得する
    (function() {
        const basePath = '<%= basePath %>';
        let allTables = []; // すべてのテーブルデータを保持
        let currentPage = 1;
        const itemsPerPage = 10; // 1ページあたり10行表示
        
        fetch(`${basePath}/api/models/table_def`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('テーブル一覧の取得に失敗しました');
                }
                return response.json();
            })
            .then(tableData => {
                const tableListBody = document.getElementById('tableListBody');
                
                // データ形式の確認と適切な取得
                allTables = tableData.data || tableData;
                
                if (allTables && allTables.length > 0) {
                    // ページング情報を更新
                    updatePaginationInfo(allTables.length);
                    // 最初のページを表示
                    displayTablePage(currentPage);
                } else {
                    tableListBody.innerHTML = '<tr><td colspan="2">テーブルが見つかりませんでした</td></tr>';
                    document.getElementById('prevPageBtn').disabled = true;
                    document.getElementById('nextPageBtn').disabled = true;
                }
            })
            .catch(error => {
                console.error('テーブル一覧の取得エラー:', error);
                const tableListBody = document.getElementById('tableListBody');
                tableListBody.innerHTML = `<tr><td colspan="2" class="error-message">エラー: ${error.message}</td></tr>`;
                
                // デバッグ情報を追加
                console.debug('API URL:', `${basePath}/api/models/table_def`);
                console.debug('ユーザーエージェント:', navigator.userAgent);
            });
            
        // 指定ページのテーブルデータを表示する関数
        function displayTablePage(page) {
            const tableListBody = document.getElementById('tableListBody');
            tableListBody.innerHTML = '';
            
            const startIndex = (page - 1) * itemsPerPage;
            const endIndex = Math.min(startIndex + itemsPerPage, allTables.length);
            
            // 現在のページのデータを表示
            for (let i = startIndex; i < endIndex; i++) {
                const table = allTables[i];
                
                const row = document.createElement('tr');
                row.dataset.tableName = table.table_logical_name || table.name;
                row.addEventListener('click', function() {
                    // テーブル詳細ページへの遷移
                    window.location.href = `${basePath}/admin/table/${table.table_logical_name || table.name}`;
                });
                
                // テーブル名
                const nameCell = document.createElement('td');
                nameCell.textContent = table.table_logical_name || table.name;
                row.appendChild(nameCell);
                
                // 説明
                const descCell = document.createElement('td');
                descCell.textContent = table.description || '説明なし';
                row.appendChild(descCell);
                
                tableListBody.appendChild(row);
            }
            
            // ページボタンの状態を更新
            document.getElementById('prevPageBtn').disabled = page <= 1;
            document.getElementById('nextPageBtn').disabled = page >= Math.ceil(allTables.length / itemsPerPage);
            document.getElementById('currentPage').textContent = page;
        }
        
        // ページング情報を更新する関数
        function updatePaginationInfo(totalItems) {
            const totalPages = Math.ceil(totalItems / itemsPerPage);
            document.getElementById('totalPages').textContent = totalPages;
            
            // ページングボタンのイベントリスナー設定
            document.getElementById('prevPageBtn').addEventListener('click', function() {
                if (currentPage > 1) {
                    currentPage--;
                    displayTablePage(currentPage);
                }
            });
            
            document.getElementById('nextPageBtn').addEventListener('click', function() {
                if (currentPage < totalPages) {
                    currentPage++;
                    displayTablePage(currentPage);
                }
            });
        }
    })();
</script>

<style>
    .panel-container {
        padding: 20px;
    }
    
    .table-list {
        max-height: 500px;
        overflow-y: auto;
        overflow-x: auto;
        border: 1px solid #ddd;
    }
    
    .data-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 0;
    }
    
    .data-table th, .data-table td {
        padding: 10px;
        border: 1px solid #ddd;
        text-align: left;
    }
    
    .data-table th {
        background-color: #2c3e50;
        color: white;
        font-weight: bold;
        position: sticky;
        top: 0;
        z-index: 1;
    }
    
    .data-table tbody tr {
        background-color: #ffffff;
    }
    
    .data-table tr:nth-child(even) {
        background-color: #f5f5f5;
    }
    
    .data-table tbody tr:hover {
        background-color: #d6e9f9;
        cursor: pointer;
        transition: background-color 0.2s ease;
    }
    
    .loading-message {
        text-align: center;
        padding: 20px;
        color: #666;
    }
    
    .error-message {
        text-align: center;
        padding: 20px;
        color: #e74c3c;
    }
    
    /* ページングコントロールのスタイル */
    .pagination-controls {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 15px;
        padding: 10px;
    }
    
    .pagination-controls button {
        background-color: #3498db;
        color: white;
        border: none;
        border-radius: 4px;
        padding: 8px 15px;
        margin: 0 5px;
        cursor: pointer;
        font-size: 14px;
    }
    
    .pagination-controls button:hover:not([disabled]) {
        background-color: #2980b9;
    }
    
    .pagination-controls button:disabled {
        background-color: #95a5a6;
        cursor: not-allowed;
    }
    
    #pageInfo {
        margin: 0 15px;
        font-size: 14px;
        color: #34495e;
    }
</style>
