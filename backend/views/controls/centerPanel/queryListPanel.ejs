<div class="panel-container">
    <h2>クエリ一覧</h2>
    <div class="table-list">
        <table class="data-table">
            <thead>
                <tr>
                    <th>クエリ名</th>
                    <th>説明</th>
                    <th>タイプ</th>
                </tr>
            </thead>
            <tbody id="queryListBody">
                <!-- この部分はサーバーサイドでクエリ一覧データを取得して表示する -->
                <tr>
                    <td colspan="3" class="loading-message">クエリ一覧を読み込み中...</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<script>
    // クエリ一覧を取得する
    (function() {
        const basePath = '<%= basePath %>';
        
        fetch(`${basePath}/api/models/query_template`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('クエリ一覧の取得に失敗しました');
                }
                return response.json();
            })
            .then(response => {
                const queryListBody = document.getElementById('queryListBody');
                const queries = response.data || [];
                
                if (queries && queries.length > 0) {
                    queryListBody.innerHTML = '';
                    
                    queries.forEach(query => {
                        const row = document.createElement('tr');
                        row.dataset.queryName = query.name;
                        
                        // 行クリック時のクエリパネルへの遷移を設定
                        row.addEventListener('click', function() {
                            // クエリ詳細ページへの遷移
                            window.location.href = `${basePath}/admin/query/${query.name}`;
                        });
                        
                        // カーソルをポインターに変更するスタイルを追加
                        row.style.cursor = 'pointer';
                        
                        // クエリ名
                        const nameCell = document.createElement('td');
                        nameCell.textContent = query.name;
                        row.appendChild(nameCell);
                        
                        // 説明
                        const descCell = document.createElement('td');
                        descCell.textContent = query.description || '説明なし';
                        row.appendChild(descCell);
                        
                        // タイプ
                        const typeCell = document.createElement('td');
                        typeCell.textContent = query.type || 'SQL';
                        row.appendChild(typeCell);
                        
                        queryListBody.appendChild(row);
                    });
                } else {
                    queryListBody.innerHTML = '<tr><td colspan="3">クエリが見つかりませんでした</td></tr>';
                }
            })
            .catch(error => {
                console.error('クエリ一覧の取得エラー:', error);
                const queryListBody = document.getElementById('queryListBody');
                queryListBody.innerHTML = `<tr><td colspan="3" class="error-message">エラー: ${error.message}</td></tr>`;
            });
    })();
</script>

<style>
    .panel-container {
        padding: 20px;
    }
    
    .table-list {
        max-height: 500px;
        overflow-y: auto;
        overflow-x: auto;
        border: 1px solid #ddd;
    }
    
    .data-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 0;
    }
    
    .data-table th, .data-table td {
        padding: 10px;
        border: 1px solid #ddd;
        text-align: left;
    }
    
    .data-table th {
        background-color: #2c3e50;
        color: white;
        font-weight: bold;
        position: sticky;
        top: 0;
        z-index: 1;
    }
    
    .data-table tbody tr {
        background-color: #ffffff;
    }
    
    .data-table tr:nth-child(even) {
        background-color: #f5f5f5;
    }
    
    .data-table tbody tr:hover {
        background-color: #d6e9f9;
        transition: background-color 0.2s ease;
        cursor: pointer;
    }
    
    .loading-message {
        text-align: center;
        padding: 20px;
        color: #666;
    }
    
    .error-message {
        text-align: center;
        padding: 20px;
        color: #e74c3c;
    }
</style>
