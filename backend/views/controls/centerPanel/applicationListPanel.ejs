<div class="panel-container">
    <h2>アプリケーション一覧</h2>
    <div class="table-list">
        <table class="data-table">
            <thead>
                <tr>
                    <th>アプリケーション名</th>
                    <th>説明</th>
                    <th>保護レベル</th>
                </tr>
            </thead>
            <tbody id="applicationListBody">
                <!-- この部分はサーバーサイドでアプリケーション一覧データを取得して表示する -->
                <tr>
                    <td colspan="3" class="loading-message">アプリケーション一覧を読み込み中...</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<script>
    // アプリケーション一覧を取得する
    (function() {
        const basePath = '<%= basePath %>';
        
        fetch(`${basePath}/api/models/application`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('アプリケーション一覧の取得に失敗しました');
                }
                return response.json();
            })
            .then(applications => {
                const applicationListBody = document.getElementById('applicationListBody');
                
                // データ形式の確認と適切な取得
                const appData = applications.data || applications;
                
                if (appData && appData.length > 0) {
                    applicationListBody.innerHTML = '';
                    
                    appData.forEach(app => {
                        const row = document.createElement('tr');
                        row.dataset.appName = app.application_name;
                        row.addEventListener('click', function() {
                            // アプリケーション詳細ページへの遷移
                            window.location.href = `${basePath}/admin/application/${app.application_name}`;
                        });
                        
                        // アプリケーション名
                        const nameCell = document.createElement('td');
                        nameCell.textContent = app.application_name;
                        row.appendChild(nameCell);
                        
                        // 説明
                        const descCell = document.createElement('td');
                        descCell.textContent = app.application_description || '説明なし';
                        row.appendChild(descCell);
                        
                        // 保護レベル
                        const protectionCell = document.createElement('td');
                        const protectionBadge = document.createElement('span');
                        protectionBadge.textContent = app.application_protection || 'protected';
                        protectionBadge.classList.add('status-badge', 
                            app.application_protection === 'public' ? 'enabled' : 'disabled');
                        protectionCell.appendChild(protectionBadge);
                        row.appendChild(protectionCell);
                        
                        applicationListBody.appendChild(row);
                    });
                } else {
                    applicationListBody.innerHTML = '<tr><td colspan="3">アプリケーションが見つかりませんでした</td></tr>';
                }
            })
            .catch(error => {
                console.error('アプリケーション一覧の取得エラー:', error);
                const applicationListBody = document.getElementById('applicationListBody');
                applicationListBody.innerHTML = `<tr><td colspan="3" class="error-message">エラー: ${error.message}</td></tr>`;
                
                // デバッグ情報を追加
                console.debug('API URL:', `${basePath}/api/models/application`);
                console.debug('ユーザーエージェント:', navigator.userAgent);
            });
    })();
</script>

<style>
    .panel-container {
        padding: 20px;
    }
    
    .data-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }
    
    .data-table th, .data-table td {
        padding: 10px;
        border: 1px solid #ddd;
        text-align: left;
    }
    
    .data-table th {
        background-color: #2c3e50;
        color: white;
        font-weight: bold;
    }
    
    .data-table tbody tr {
        background-color: #ffffff;
    }
    
    .data-table tr:nth-child(even) {
        background-color: #f5f5f5;
    }
    
    .data-table tbody tr:hover {
        background-color: #d6e9f9;
        cursor: pointer;
        transition: background-color 0.2s ease;
    }
    
    .loading-message {
        text-align: center;
        padding: 20px;
        color: #666;
    }
    
    .error-message {
        text-align: center;
        padding: 20px;
        color: #e74c3c;
    }
    
    .status-badge {
        display: inline-block;
        padding: 3px 10px;
        border-radius: 12px;
        font-size: 0.8em;
        transition: all 0.2s ease;
    }
    
    .status-badge:hover {
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        transform: translateY(-1px);
    }
    
    .status-badge.enabled {
        background-color: #2ecc71;
        color: white;
    }
    
    .status-badge.disabled {
        background-color: #e67e22;
        color: white;
    }
</style>
