<div class="sidebarPanel" id="sideSubPanel">
    <div class="sidePanelTitle">
        <label>
            <%= sidePanelTitle %>
        </label>
    </div>
    <div class="sidePanelMenu" id="sidePanelSubMenu" open="true">
        <input type="text" id="search" placeholder="検索">
        <ul id="list">
        </ul>
    </div>
</div>

<script>
    let listType = '<%= sidePanelTitle %>';

    document.addEventListener('DOMContentLoaded', async () => {
        let listTag = document.getElementById('list');
        switch (listType) {
            case 'application':
                let applicationList = await fetch('<%= basePath %>/api/models/application');
                applicationList = await applicationList.json();
                applicationList = applicationList.data;
                listTag.replaceWith(await createTableList(applicationList));
                break;
            case 'table':
                let tableList = await fetch('<%= basePath %>/api/models/all');
                tableList = await tableList.json();
                listTag.replaceWith(await createTableList(tableList));
                break;
            case 'script':
                console.log('script is selected');
                let scriptList = await fetch('<%= basePath %>/api/models/script');
                scriptList = await scriptList.json();
                scriptList = scriptList.data;
                listTag.replaceWith(await createTableList(scriptList));
                break;
            case 'query':
                console.log('query is selected');
                let queryList = await fetch('<%= basePath %>/api/models/query_template');
                queryList = await queryList.json();
                queryList = queryList.data;
                listTag.replaceWith(await createTableList(queryList));
                break;
            default:
                break;
        }
        
        // 検索機能を追加
        const searchInput = document.getElementById('search');
        searchInput.addEventListener('input', () => {
            const searchText = searchInput.value.toLowerCase();
            const items = document.querySelectorAll('#list li');
            
            items.forEach(item => {
                const text = item.textContent.toLowerCase();
                if (text.includes(searchText)) {
                    item.style.display = '';
                } else {
                    item.style.display = 'none';
                }
            });
        });
    });

    async function createTableList(json) {
        //console.log(json);
        const list = document.createElement('ul');
        // idを設定
        list.id = 'list';
        json.forEach((element) => {
            //console.log(element);
            const li = document.createElement('li');
            const a = document.createElement('a');
            switch (listType) {
                case 'application':
                    a.href = '<%= basePath %>/admin/application/' + element.application_name;
                    a.textContent = element.application_name;
                    break;
                case 'table':
                    a.href = '<%= basePath %>/admin/table/' + element.table_name;
                    a.textContent = element.table_name;
                    break;
                case 'script':
                    // スクリプトの場合はクリックイベントを追加して、centerPanelに表示する
                    a.textContent = element.script_name;
                    a.href = 'javascript:void(0)'; // リンクのデフォルト動作をキャンセル
                    a.addEventListener('click', async () => {
                        try {
                            // スクリプト表示用のイベントをディスパッチ
                            const event = new CustomEvent('showInCenterPanel', {
                                detail: {
                                    type: 'script',
                                    name: element.script_name
                                }
                            });
                            window.dispatchEvent(event);
                        } catch (error) {
                            console.error('スクリプト表示エラー:', error);
                        }
                    });
                    break;
                case 'query':
                    a.href = '<%= basePath %>/admin/query/' + element.name;
                    a.textContent = element.name;
                    break;
                default:
                    break;
            }
            // マウスがリンクに乗った時にカーソルをポインタに変更する。
            a.onmouseover = () => {
                a.style.cursor = 'pointer';
            };
            li.appendChild(a);
            list.appendChild(li);
        });
        return list;
    }

</script>